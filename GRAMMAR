NONTERMINALS
============

PROGRAM := { NEWLINE }, { STATEMENT { NEWLINE } } ;


STATEMENT := LANGUAGE-DEFINITION | STRING-DEFINITION ;


LANGUAGE-DEFINITION := SYMBOL, DEFINE, SET-EXPRESSION, NEWLINE ;
STRING-DEFINITION   := SYMBOL, DEFINE, STRING-EXPRESSION, IN, SET-EXPRESSION, NEWLINE ;
EXCLAIM-STATEMENT   := STRING-EXPRESSION, EXCLAMATION, NEWLINE ;
INQUIRE-STATEMENT   := SYMBOL, IN, SET-EXPRESSION, INQUIRY, NEWLINE ;


SET-EXPRESSION             := UNION-EXPRESSION ;
UNION-EXPRESSION           := INTERSECT-EXPRESSION, UNION, UNION-EXPRESSION
                            | INTERSECT-EXPRESSION ;
INTERSECT-EXPRESSION       := PRODUCT-EXPRESSION, INTERSECT, INTERSECT-EXPRESSION
                            | PRODUCT-EXPRESSION ;
PRODUCT-EXPRESSION         := DIFFERENCE-EXPRESSION, PRODUCT, PRODUCT-EXPRESSION
                            | DIFFERENCE-EXPRESSION ;
DIFFERENCE-EXPRESSION      := COMPLEMENT-EXPRESSION, DIFFERENCE, DIFFERENCE-EXPRESSION 
                            | COMPLEMENT-EXPRESSION ;
COMPLEMENT-EXPRESSION      := COMPLEMENT, COMPLEMENT-EXPRESSION 
                            | SET-PARENTHESIS-EXPRESSION ;
KLEENE-EXPRESSION          := SET-PARENTHESIS-EXPRESSION, STAR ;
SET-PARENTHESIS-EXPRESSION := LEFT-PARENTHESIS, SET-EXPRESSION, RIGHT-PARENTHESIS
                            | SET 
                            | SYMBOL ;


SET := LEFT-BRACE, STRING-EXPRESSION-LIST, RIGHT-BRACE
     | EMPTY-SET ;


STRING-EXPRESSION             := CONCATENATE-EXPRESSION ;
CONCATENATE-EXPRESSION        := STRING-PARENTHESIS-EXPRESSION, CONCATENATE, CONCATENATE-EXPRESSION ;
STRING-PARENTHESIS-EXPRESSION := LEFT-PARENTHESIS, STRING-EXPRESSION, RIGHT-PARENTHESIS
                               | STRING 
                               | SYMBOL ;


STRING := BIT, { BIT }
        | EMPTY-STRING ;


STRING-EXPRESSION-LIST := STRING-EXPRESSION, [ COMMA, STRING-EXPRESSION-LIST ] ;


EXPRESSION := SET-EXPRESSION
            | STRING-EXPRESSION ;


TERMINALS
=========

NEWLINE           := ? newline character ? ;
SYMBOL            := ? non-empty sequence of non-whitespace characters ? ;
DEFINE            := ":=" ;
IN                := "∈" ;
EXCLAMATION       := "!" ;
INQUIRY           := "?" ;
UNION             := "∪" ;
INTERSECT         := "∩" ;
PRODUCT           := "×" ;
DIFFERENCE        := "-" ;
COMPLEMENT        := "¬" ;
STAR              := "*" ;
CONCATENATE       := "+" ;
LEFT-PARENTHESIS  := "(" ;
RIGHT-PARENTHESIS := ")" ;
LEFT-BRACE        := "{" ;
RIGHT-BRACE       := "}" ;
EMPTY-SET         := "∅" ;
EMPTY-STRING      := "ε" ;
COMMA             := "," ;
BIT               := "0" | "1" ;
